spin_manifest_version = 2

[application]
name = "examples"
version = "0.1.0"
authors = ["itowlson <ivan.towlson@fermyon.com>"]
description = ""

[[trigger.http]]
route = "/fetch-one"
component = "fetch-one"

[component.fetch-one]
source = "fetch-one/target/wasm32-wasi/release/fetch_one.wasm"
sqlite_databases = ["default"]
allowed_outbound_hosts = ["postgres://localhost:5432"]
[component.fetch-one.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "fetch-one"
watch = ["src/**/*.rs", "Cargo.toml"]

[[trigger.http]]
route = "/fetch-many"
component = "fetch-many"

[component.fetch-many]
source = "fetch-many/target/wasm32-wasi/release/fetch_many.wasm"
sqlite_databases = ["default"]
allowed_outbound_hosts = ["postgres://localhost:5432"]
[component.fetch-many.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "fetch-many"
watch = ["src/**/*.rs", "Cargo.toml"]

[[trigger.http]]
route = "/fetch-streaming"
component = "fetch-streaming"

[component.fetch-streaming]
source = "fetch-streaming/target/wasm32-wasi/release/fetch_streaming.wasm"
sqlite_databases = ["default"]
allowed_outbound_hosts = ["postgres://localhost:5432"]
[component.fetch-streaming.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "fetch-streaming"
watch = ["src/**/*.rs", "Cargo.toml"]

[[trigger.http]]
route = "/execute-insert"
component = "execute-insert"

[component.execute-insert]
source = "execute-insert/target/wasm32-wasi/release/execute_insert.wasm"
sqlite_databases = ["default"]
allowed_outbound_hosts = ["postgres://localhost:5432"]
[component.execute-insert.build]
command = "cargo build --target wasm32-wasi --release"
workdir = "execute-insert"
watch = ["src/**/*.rs", "Cargo.toml"]
